# Start with the official Golang image
FROM golang:1.22-alpine AS builder

# Set the Current Working Directory inside the container
WORKDIR /app

# Copy go.mod and go.sum files
COPY go.mod go.sum ./

# Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed
RUN go mod download

# Install Delve
RUN apk add --no-cache git
RUN go install github.com/go-delve/delve/cmd/dlv@latest

# Copy the source from the current directory to the Working Directory inside the container
COPY . .

# Build the Go app with debug information
RUN go build -gcflags "all=-N -l" -o whatsapp-like ./cmd/main.go

######## Start a new stage from scratch #######
FROM alpine:latest

# Set the Current Working Directory inside the container
WORKDIR /root/

# Install Delve
RUN apk add --no-cache bash
COPY --from=builder /go/bin/dlv /usr/local/bin/dlv

# Copy the Pre-built binary file from the previous stage
COPY --from=builder /app/whatsapp-like .

# Expose ports for the application and Delve debugger
EXPOSE 8080 40000

# Command to run the executable with Delve
CMD ["dlv", "exec", "./whatsapp-like", "--headless", "--listen=:40000", "--api-version=2", "--accept-multiclient", "--continue"]
